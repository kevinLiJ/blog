/*
Navicat MySQL Data Transfer

Source Server         : blog
Source Server Version : 50717
Source Host           : localhost:3306
Source Database       : myblog

Target Server Type    : MYSQL
Target Server Version : 50717
File Encoding         : 65001

Date: 2017-09-19 11:45:55
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for articles
-- ----------------------------
DROP TABLE IF EXISTS `articles`;
CREATE TABLE `articles` (
  `content` longtext,
  `title` varchar(255) DEFAULT NULL,
  `creat_time` varchar(255) DEFAULT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `num_of_collections` int(255) DEFAULT NULL,
  `md_content` longtext,
  `last_mod_time` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of articles
-- ----------------------------
INSERT INTO `articles` VALUES ('<blockquote>\n<p>项目开发环境时，前台angular2会起一个监听文件变化的服务，后台express也会起一个服务，然后想要npm一条命令把前后台两个服务同时起来</p>\n</blockquote>\n<pre><code>// ng serve         起angular项目\n// node ./bin/www   起express项目\nng serve &amp;&amp; node ./bin/www\nng serve &amp; node ./bin/www\n</code></pre><p>这两种方式都会卡在第一条监听命令上，不会执行第二条监听命令，</p>\n<p>在Stack Overflow上看到了<a href=\"https://segmentfault.com/q/1010000006780705\">解决方案</a>,</p>\n<pre><code>ng serve | node ./bin/www\n</code></pre><p>附上<a href=\"http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html\">阮一峰的npm script详解</a></p>\n<p><a href=\"https://github.com/kevinLiJ/contacts\">此angular2+express项目地址</a></p>\n', 'npm script 一条命令起两个服务', '2017-09-05 18:51:22', '1', '1', '> 项目开发环境时，前台angular2会起一个监听文件变化的服务，后台express也会起一个服务，然后想要npm一条命令把前后台两个服务同时起来\n\n``` \n// ng serve         起angular项目\n// node ./bin/www   起express项目\nng serve && node ./bin/www\nng serve & node ./bin/www\n```\n这两种方式都会卡在第一条监听命令上，不会执行第二条监听命令，\n\n在Stack Overflow上看到了[解决方案](https://segmentfault.com/q/1010000006780705),\n```\nng serve | node ./bin/www\n```\n\n附上[阮一峰的npm script详解](http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html)\n\n\n[此angular2+express项目地址](https://github.com/kevinLiJ/contacts)', '2017-09-05 17:31:56', '前端');
INSERT INTO `articles` VALUES ('<p><img src=\"http://upload-images.jianshu.io/upload_images/2973478-f4fc004549c3a1e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"less中mixins与extend的区别\"></p>\n<blockquote>\n<p>另外 <code>mixins</code> 可以传参数，也可以做函数来使用。</p>\n</blockquote>\n', 'less中mixins与extend的区别', '2017-09-07 15:34:25', '2', '0', '![less中mixins与extend的区别](http://upload-images.jianshu.io/upload_images/2973478-f4fc004549c3a1e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 另外 ```mixins``` 可以传参数，也可以做函数来使用。', '2017-09-07 15:34:25', '前端');
INSERT INTO `articles` VALUES ('<h1 id=\"html-\">html语义化</h1>\n<ul>\n<li><p>为什么要语义化</p>\n<ul>\n<li><p>在没有css的情况下，页面也能呈现出内容结构；</p>\n</li><li><p>有利于SEO有助于爬虫住区更多的有效信息，爬虫依赖于标签来确定上下文和各个关键字的权重；</p>\n</li><li><p>方便其他设备解析：屏幕阅读器、盲人阅读器、移动设备，以更有意义的方式渲染网页。</p>\n</li></ul>\n</li><li><p>如何实现语义化</p>\n<ul>\n<li><p>尽可能少的使用div、span等无语义的标签，只作为布局框架使用；</p>\n</li><li><p>不要使用纯样式标签，如b(文本加粗)、font(规定字体格式)、u(下划线文本)、i(规定斜体文本)等，使用css代替；</p>\n</li><li><p>需要强调的文本放在strong(语义更强)或em标签中，其携带的默认样式最好用css代替。</p>\n</li><li>每个input的说明文本都要用label标签包裹起来，并设置label的for属性为input的id让其相关联。</li><li>可以使用<a href=\"https://validator.w3.org/\">W3C HTML Validator</a>验证并规范代码。</li></ul>\n</li></ul>\n<h1 id=\"css-\">css规范</h1>\n<ul>\n<li>CSS页面文件，其文件名与HTML文件名一致；</li><li>使用soft tab (四个空格)进行缩进；</li><li>每个属性生命末尾后都要加分号；</li><li>注意空格的使用(不在详解)；</li><li>注释统一使用/<em> </em>/；</li><li>命名：<ul>\n<li>依据其<strong>内容、功能</strong>来命名，而不是其表现形式；</li><li>类名使用小写字母，以中划线(相比下划线可少按一次shift)分割；</li><li>id使用驼峰命名法；</li><li>不允许使用拼音；<ul>\n<li>sdfsdf</li></ul>\n</li></ul>\n</li><li><p>样式声明顺序按下面的例子做分组处理：</p>\n<pre class=\" language-javascript\"><code class=\" language-javascript\">    <span class=\"token punctuation\">.</span>declaration<span class=\"token operator\">-</span>order <span class=\"token punctuation\">{</span>\n          display<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n          float<span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n\n          position<span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n          top<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          right<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          left<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          z<span class=\"token operator\">-</span>index<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n          border<span class=\"token punctuation\">:</span> 1px solid #e5e5e5<span class=\"token punctuation\">;</span>\n          border<span class=\"token operator\">-</span>radius<span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n          width<span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n          height<span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n\n          font<span class=\"token punctuation\">:</span> normal 13px <span class=\"token string\">\"Helvetica Neue\"</span><span class=\"token punctuation\">,</span> sans<span class=\"token operator\">-</span>serif<span class=\"token punctuation\">;</span>\n          line<span class=\"token operator\">-</span>height<span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n          text<span class=\"token operator\">-</span>align<span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n\n          color<span class=\"token punctuation\">:</span> #<span class=\"token number\">333</span><span class=\"token punctuation\">;</span>\n          background<span class=\"token operator\">-</span>color<span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span>\n\n          opacity<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n</code></pre>\n</li><li><strong>尽量将媒体查询的规则靠近与他们相关的规则</strong>，不要将他们一起放到一个独立的样式文件中，或者丢在文档的最底部，这样做只会让大家以后更容易忘记他们；</li><li>避免使用@import指令引入css文件，指令慢，并且增加额外请求；</li><li>禁止使用<code>！important</code>；</li><li>属性值0后不加单位；</li><li>用<code>border：0</code>代替<code>border：none</code>;</li><li>尽量少用*选择器。</li></ul>\n<h1 id=\"-\">图片规范</h1>\n<ul>\n<li>图片使用英文字母、数字与下划线的组合；</li><li>要尽量<a href=\"https://www.tinypng.com/\">压缩图片</a>到最小；</li><li>可使用<a href=\"https://www.base64-image.de/\">base64</a>编码代替较小图片的链接，可以节省一次请求;</li><li>运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线。</li><li>可用<a href=\"http://jigsaw.w3.org/css-validator/\">W3C css Validator</a>验证并规范css代码；</li><li>必须为img标签添加alt属性；</li></ul>\n', '前端代码规范总结', '2017-09-07 15:38:23', '3', '0', '# html语义化\n* 为什么要语义化\n    * 在没有css的情况下，页面也能呈现出内容结构；\n\n    * 有利于SEO有助于爬虫住区更多的有效信息，爬虫依赖于标签来确定上下文和各个关键字的权重；\n    \n    * 方便其他设备解析：屏幕阅读器、盲人阅读器、移动设备，以更有意义的方式渲染网页。\n\n* 如何实现语义化\n    * 尽可能少的使用div、span等无语义的标签，只作为布局框架使用；\n\n    * 不要使用纯样式标签，如b(文本加粗)、font(规定字体格式)、u(下划线文本)、i(规定斜体文本)等，使用css代替；\n    \n    * 需要强调的文本放在strong(语义更强)或em标签中，其携带的默认样式最好用css代替。\n    * 每个input的说明文本都要用label标签包裹起来，并设置label的for属性为input的id让其相关联。\n    * 可以使用[W3C HTML Validator](https://validator.w3.org/)验证并规范代码。\n    \n# css规范\n\n* CSS页面文件，其文件名与HTML文件名一致；\n* 使用soft tab (四个空格)进行缩进；\n* 每个属性生命末尾后都要加分号；\n* 注意空格的使用(不在详解)；\n* 注释统一使用/* */；\n* 命名：\n    * 依据其**内容、功能**来命名，而不是其表现形式；\n    * 类名使用小写字母，以中划线(相比下划线可少按一次shift)分割；\n    * id使用驼峰命名法；\n    * 不允许使用拼音；\n        * sdfsdf\n* 样式声明顺序按下面的例子做分组处理：\n```javascript\n      .declaration-order {\n            display: block;\n            float: right;\n    \n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 100;\n        \n            border: 1px solid #e5e5e5;\n            border-radius: 3px;\n            width: 100px;\n            height: 100px;\n        \n            font: normal 13px \"Helvetica Neue\", sans-serif;\n            line-height: 1.5;\n            text-align: center;\n        \n            color: #333;\n            background-color: #f5f5f5;\n        \n            opacity: 1;\n        }\n ```\n* **尽量将媒体查询的规则靠近与他们相关的规则**，不要将他们一起放到一个独立的样式文件中，或者丢在文档的最底部，这样做只会让大家以后更容易忘记他们；\n* 避免使用@import指令引入css文件，指令慢，并且增加额外请求；\n* 禁止使用`！important`；\n* 属性值0后不加单位；\n* 用`border：0`代替`border：none`;\n* 尽量少用*选择器。\n\n# 图片规范\n* 图片使用英文字母、数字与下划线的组合；\n* 要尽量[压缩图片](https://www.tinypng.com/)到最小；\n* 可使用[base64](https://www.base64-image.de/)编码代替较小图片的链接，可以节省一次请求;\n* 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线。\n* 可用[W3C css Validator](http://jigsaw.w3.org/css-validator/)验证并规范css代码；\n* 必须为img标签添加alt属性；', '2017-09-12 18:02:06', '随笔');
INSERT INTO `articles` VALUES ('<h1 id=\"markdown-\">markdown笔记</h1>\n<p>标签：markdown</p>\n<hr>\n<h3 id=\"-\"><strong>标题</strong></h3>\n<blockquote>\n<p><em>#号的数量代表为几级标题</em></p>\n</blockquote>\n<h1 id=\"-1\">一级标题1</h1>\n<p>一级标题2</p>\n<p>===</p>\n<h2 id=\"-1\">二级标题1</h2>\n<p>二级标题2</p>\n<hr>\n<h3 id=\"-\">三级标题</h3>\n<p>...共有六级标题</p>\n<h3 id=\"-\"><strong>引用</strong></h3>\n<blockquote>\n<p>引用的文字</p>\n<blockquote>\n<p>可以嵌套引用</p>\n</blockquote>\n<h4 id=\"-markedown-\">也可以使用其他markedown语法</h4>\n</blockquote>\n<hr>\n<h3 id=\"-\"><strong>列表</strong></h3>\n<blockquote>\n<ul>\n<li><p><em>无序列表可用+ - *</em></p>\n</li><li><p><em>有序列表用 数字. 的形式</em></p>\n</li></ul>\n</blockquote>\n<h4 id=\"-\">无序列表</h4>\n<ul>\n<li><p>item1</p>\n</li><li><p>item2</p>\n</li></ul>\n<ul>\n<li>item3</li></ul>\n<ul>\n<li>item 4</li></ul>\n<h4 id=\"-\">有序列表</h4>\n<ol>\n<li><p>item1</p>\n</li><li><p>item2</p>\n</li><li><p>item3</p>\n</li></ol>\n<hr>\n<h3 id=\"-\"><strong>代码区块</strong></h3>\n<blockquote>\n<p><em>内容前加四个空格或者一个tab</em></p>\n</blockquote>\n<p>代码区块</p>\n<hr>\n<h3 id=\"-\"><strong>分割线</strong></h3>\n<blockquote>\n<p><em>三个 \\</em> -显示为分割线*</p>\n</blockquote>\n<hr>\n<hr>\n<hr>\n<hr>\n<h3 id=\"-\"><strong>斜体</strong></h3>\n<blockquote>\n<p><em>一个\\</em>包裹为斜体，两个*包裹为粗体*</p>\n</blockquote>\n<p><em>斜体</em></p>\n<p><strong>加粗的文字</strong></p>\n<hr>\n<h3 id=\"-\"><strong>链接</strong></h3>\n<blockquote>\n<p><em>超链接： [名称](url)</em></p>\n<p><em>图片： ![alt](url)</em></p>\n</blockquote>\n<p><a href=\"http://www.baidu.com\">超链接</a></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2973478-7cf03410a36c5cc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图片\"></p>\n<h3 id=\"-\"><strong>代码框</strong></h3>\n<p><code>console.log(\'111\')</code></p>\n', 'markdown', '2017-09-07 18:42:16', '44', '0', '# markdown笔记\n\n标签：markdown\n\n- - -\n\n### **标题**\n\n> *\\#号的数量代表为几级标题*\n\n# 一级标题1\n\n一级标题2\n\n===\n\n## 二级标题1\n\n二级标题2\n\n---\n\n### 三级标题\n\n...共有六级标题\n\n### **引用**\n\n> 引用的文字\n\n> > 可以嵌套引用\n\n> #### 也可以使用其他markedown语法\n\n***\n\n### **列表**\n\n> * *无序列表可用+ - **\n\n> * *有序列表用 数字. 的形式*\n\n#### 无序列表\n\n+ item1\n\n+ item2\n\n- item3\n\n* item 4\n\n#### 有序列表\n\n1. item1\n\n2. item2\n\n3. item3\n\n***\n\n### **代码区块**\n\n> *内容前加四个空格或者一个tab*\n\n代码区块\n\n***\n\n### **分割线**\n\n> *三个 \\* -显示为分割线*\n\n***\n\n* * *\n\n- - -\n\n***\n\n### **斜体**\n\n> *一个\\*包裹为斜体，两个\\*包裹为粗体*\n\n*斜体*\n\n**加粗的文字**\n\n***\n\n### **链接**\n\n> *超链接： \\[名称](url)*\n\n> *图片： \\!\\[alt](url)*\n\n[超链接](http://www.baidu.com)\n\n![图片](http://upload-images.jianshu.io/upload_images/2973478-7cf03410a36c5cc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### **代码框**\n\n`console.log(\'111\')`', '2017-09-07 18:42:16', '前端');
INSERT INTO `articles` VALUES ('<ul>\n<li><p><strong>可以使用formData提交含有文件的表单</strong></p>\n<blockquote>\n<ul>\n<li>何时会使用到formdata,以及详细用法，请点击此<a href=\"http://www.111cn.net/wy/jquery/115318.htm\">网站</a></li><li>formData不兼容 &lt;=ie9</li><li>&lt;=ie9 提交含有文件的表单，本人还没有好的解决办法，可以使用jquery.form等插件</li></ul>\n</blockquote>\n</li><li><p><strong>获取提交文件的大小以及类型</strong></p>\n<blockquote>\n<ul>\n<li><code>input[type=\'file\'].files</code>是包含多个文件对象的数组，每个对象含有上传文件的相关信息，包含文件名称、大小、类型、修改时间等</li><li>&lt;=ie9 不支持files属性，所以需要写兼容代码获取文件相关信息<ul>\n<li>首先获取当前ie版本<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/msie\\s\\d+/</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/msie\\s\\d+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/trident\\s?\\d+/</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/trident\\s?\\d+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> ieVersion <span class=\"token operator\">=</span> theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/msie\\s\\d+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\d+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> theUA<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/trident\\s?\\d+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// ieVersion 就是IE版本</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li><li>利用此方法获取上传文件的大小，但是需要ie浏览器做一些设置<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>type<span class=\"token operator\">=</span><span class=\"token string\">\'file\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n              file<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              file<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>selection<span class=\"token punctuation\">.</span><span class=\"token function\">createRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">var</span> fso <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scripting.FileSystemObject\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token comment\" spellcheck=\"true\">// thisSize就是上传文件的大小</span>\n              thisSize <span class=\"token operator\">=</span> fso<span class=\"token punctuation\">.</span><span class=\"token function\">GetFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"如果错误为：Error:Automation 服务器不能创建对象；\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"请按以下方法配置浏览器：\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"请打开【Internet选项-安全-Internet-自定义级别-ActiveX控件和插件-对未标记为可安全执行脚本的ActiveX控件初始化并执行脚本（不安全）-点击启用-确定】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n</code></pre>\n</li><li>获取文件的类型\n<code>input[type=\'file\'].value</code>可以获取到上传文件的路径，可以拿路径来截取文件名；当然如果file设置了multiple，value只能获取最后一个文件的路径；</li></ul>\n</li></ul>\n</blockquote>\n</li></ul>\n', '表单提交文件相关', '2017-09-11 18:05:15', '45', '5', '- **可以使用formData提交含有文件的表单**\n> - 何时会使用到formdata,以及详细用法，请点击此[网站](http://www.111cn.net/wy/jquery/115318.htm)\n  - formData不兼容 <=ie9\n  - <=ie9 提交含有文件的表单，本人还没有好的解决办法，可以使用jquery.form等插件\n\n- **获取提交文件的大小以及类型**\n> - ``` input[type=\'file\'].files```是包含多个文件对象的数组，每个对象含有上传文件的相关信息，包含文件名称、大小、类型、修改时间等\n  - <=ie9 不支持files属性，所以需要写兼容代码获取文件相关信息\n    - 首先获取当前ie版本\n ```javascript\n      if ((theUA.match(/msie\\s\\d+/) && theUA.match(/msie\\s\\d+/)[0]) || (theUA.match(/trident\\s?\\d+/) && theUA.match(/trident\\s?\\d+/)[0])) {\n            var ieVersion = theUA.match(/msie\\s\\d+/)[0].match(/\\d+/)[0] || theUA.match(/trident\\s?\\d+/)[0];\n            // ieVersion 就是IE版本\n}\n ```\n    - 利用此方法获取上传文件的大小，但是需要ie浏览器做一些设置\n```javascript\ntry {\n                    var file = input[type=\'file\'];\n                    file.select();\n                    file.blur();\n                    var path = document.selection.createRange().text;\n                    var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\n                    // thisSize就是上传文件的大小\n                    thisSize = fso.GetFile(path).size;\n                } catch (e) {\n                    alert(e + \"\\n\" + \"如果错误为：Error:Automation 服务器不能创建对象；\" + \"\\n\" + \"请按以下方法配置浏览器：\" + \"\\n\" + \"请打开【Internet选项-安全-Internet-自定义级别-ActiveX控件和插件-对未标记为可安全执行脚本的ActiveX控件初始化并执行脚本（不安全）-点击启用-确定】\");\n                    return window.location.reload();\n                }\n```\n    - 获取文件的类型\n      ``` input[type=\'file\'].value```可以获取到上传文件的路径，可以拿路径来截取文件名；当然如果file设置了multiple，value只能获取最后一个文件的路径；', '2017-09-12 18:00:39', '随笔');
INSERT INTO `articles` VALUES ('<ul>\n<li><strong>git merge --squash 分支名称</strong><blockquote>\n<p>把分支中的多个commit合并成一次修改，合并到主干。因此主干上不会出现分支中详细的commit信息。</p>\n</blockquote>\n</li><li><strong>git cherry-pick 哈希值</strong><blockquote>\n<p>把分支中指定的一次commit提交到主干，而不是所有的修改。</p>\n</blockquote>\n</li></ul>\n', '合并分支', '2017-09-11 18:16:55', '46', '0', '* **git merge --squash 分支名称**\n> 把分支中的多个commit合并成一次修改，合并到主干。因此主干上不会出现分支中详细的commit信息。\n* **git cherry-pick 哈希值**\n> 把分支中指定的一次commit提交到主干，而不是所有的修改。', '2017-09-11 18:16:55', '前端');
INSERT INTO `articles` VALUES ('<ul>\n<li><strong>Map的键可以使各种类型的值（包括字符串）</strong><blockquote>\n<p>js对象中只能用字符串作为键，有很大的限制，所以引入了Map数据结构。</p>\n</blockquote>\n</li><li><strong>Map的键实际上是跟内存地址绑定的</strong>，这样就就解决了同名属性碰撞的问题<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'a\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">555</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'a\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//undefined</span>\n</code></pre>\n</li><li><p><strong>Map的属性和方法</strong></p>\n<ul>\n<li>size <blockquote>\n<p>返回Map结构的成员总数</p>\n</blockquote>\n</li><li><p>set（key，value） </p>\n<blockquote>\n<p>此方法返回的是Map本身，所以可以链式调用</p>\n</blockquote>\n</li><li><p>get（key）</p>\n<blockquote>\n<p>如果不存在，返回undefined</p>\n</blockquote>\n</li><li><p>has（key） 返回布尔值</p>\n</li><li><p>delete（key）返回布尔值</p>\n</li><li><p>clear（） </p>\n<blockquote>\n<p>清除所有成员，没有返回值</p>\n</blockquote>\n</li></ul>\n</li><li><p>遍历方法</p>\n<pre><code>for (let key of map.keys()){}\nfor(let value of map.values()){}\nfor(let [key, value] of map.entries()){}\n for(let [key, value] of map){}\n</code></pre></li><li><p>Map转为数组</p>\n<pre><code>[...map.keys()]\n[...map.values()]\n[...map,entries()]\n[...map] //结果同上\n</code></pre></li><li><p>数组转为Map</p>\n<pre><code>new Map([[true, 7], [{foo: 3},[\'abc]]])\n</code></pre></li></ul>\n', 'Map', '2017-09-11 18:17:29', '47', '4', '* **Map的键可以使各种类型的值（包括字符串）**\n>js对象中只能用字符串作为键，有很大的限制，所以引入了Map数据结构。\n* **Map的键实际上是跟内存地址绑定的**，这样就就解决了同名属性碰撞的问题\n``` javascript\n  var map = new Map();\n  map.set([\'a\'], 555);\n  map.get([\'a\']);  //undefined\n```\n* **Map的属性和方法**\n  * size \n  > 返回Map结构的成员总数\n  * set（key，value） \n  >此方法返回的是Map本身，所以可以链式调用\n  \n  * get（key）\n  > 如果不存在，返回undefined\n\n  * has（key） 返回布尔值\n\n  * delete（key）返回布尔值\n\n  * clear（） \n  > 清除所有成员，没有返回值\n\n* 遍历方法\n``` \n  for (let key of map.keys()){}\n  for(let value of map.values()){}\n  for(let [key, value] of map.entries()){}\n   for(let [key, value] of map){}\n```\n* Map转为数组\n```\n[...map.keys()]\n[...map.values()]\n[...map,entries()]\n[...map] //结果同上\n```\n\n* 数组转为Map\n```\nnew Map([[true, 7], [{foo: 3},[\'abc]]])\n```', '2017-09-11 18:17:29', '前端');
INSERT INTO `articles` VALUES ('<h3 id=\"1-data-\">1.data如果对象嵌套对象</h3>\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> ajaxData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>d<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//ajax参数相关设置</span>\n <span class=\"token punctuation\">{</span>\n    contentType<span class=\"token punctuation\">:</span><span class=\"token string\">\'application/json\'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token punctuation\">:</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ajaxData<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"2-data-\">2.data为对象嵌套数组</h3>\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> ajaxData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//ajax参数相关设置</span>\n<span class=\"token punctuation\">{</span>\n   traditional<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n   data<span class=\"token punctuation\">:</span>ajaxData\n<span class=\"token punctuation\">}</span>\n</code></pre>\n', 'jquery ajax给java发送复杂数据的格式相关问题', '2017-09-11 18:19:12', '48', '0', '### 1.data如果对象嵌套对象\n ```javascript\nvar ajaxData = {\n    a:1,\n    b:{d:3}\n}\n//ajax参数相关设置\n {\n    contentType:\'application/json\',\n    data: JSON.stringify(ajaxData)\n }\n ```\n### 2.data为对象嵌套数组\n```javascript\nvar ajaxData = {\n    a:1,\n    b:[1,2,3,4]\n}\n//ajax参数相关设置\n{\n   traditional: true,\n   data:ajaxData\n}\n```', '2017-09-12 17:59:43', '前端');
INSERT INTO `articles` VALUES ('<ul>\n<li>正则:  <a href=\"https://regexr.com/\">https://regexr.com/</a></li><li>js高级技巧: <a href=\"https://fed.renren.com/2017/09/03/js-profesional-skill/?utm_source=tuicool&amp;utm_medium=referral\">https://fed.renren.com/2017/09/03/js-profesional-skill/?utm_source=tuicool&amp;utm_medium=referral</a></li></ul>\n', '一些有用的链接', '2017-09-18 10:35:32', '50', '0', '+ 正则:  [https://regexr.com/](https://regexr.com/)\n+ js高级技巧: [https://fed.renren.com/2017/09/03/js-profesional-skill/?utm_source=tuicool&utm_medium=referral](https://fed.renren.com/2017/09/03/js-profesional-skill/?utm_source=tuicool&utm_medium=referral)\n', '2017-09-18 17:33:22', '前端');
INSERT INTO `articles` VALUES ('<ul>\n<li>复制对象 <strong><em>es6</em></strong><pre class=\" language-javascript\"><code class=\" language-javascript\">  <span class=\"token comment\" spellcheck=\"true\">// Object.assign()</span>\n  <span class=\"token keyword\">let</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>        \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> des <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</li><li>复制数组 <strong><em>es6</em></strong><pre class=\" language-javascript\"><code class=\" language-javascript\">  <span class=\"token comment\" spellcheck=\"true\">// 数组解构</span>\n  <span class=\"token keyword\">let</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> des <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</li><li></li></ul>\n', 'js总结', '2017-09-18 16:56:37', '51', '0', '+ 复制对象 ***es6***\n```javascript\n    // Object.assign()\n    let src = {\n            a: 1,\n            b: 2        \n        };\n    let des = Object.assign({}, src);\n```\n+ 复制数组 ***es6***\n```javascript\n    // 数组解构\n    let src = [1, 2, 3];\n    let des = [...src];\n```\n+ ', '2017-09-18 16:56:49', '前端');

-- ----------------------------
-- Table structure for class
-- ----------------------------
DROP TABLE IF EXISTS `class`;
CREATE TABLE `class` (
  `class_name` varchar(255) DEFAULT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of class
-- ----------------------------
INSERT INTO `class` VALUES ('前端', '1');
INSERT INTO `class` VALUES ('随笔', '2');

-- ----------------------------
-- Table structure for comments
-- ----------------------------
DROP TABLE IF EXISTS `comments`;
CREATE TABLE `comments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) DEFAULT NULL,
  `comment_id` int(11) DEFAULT NULL,
  `comment` varchar(255) DEFAULT NULL,
  `creat_time` char(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comments
-- ----------------------------
INSERT INTO `comments` VALUES ('1', '44', null, '', '2017-09-11 11:30:11');
INSERT INTO `comments` VALUES ('2', '44', null, '111', '2017-09-11 11:31:37');
INSERT INTO `comments` VALUES ('3', '1', null, '11111', '2017-09-11 11:41:22');
INSERT INTO `comments` VALUES ('4', '1', '1', '3333', '2017-09-11 11:41:49');
INSERT INTO `comments` VALUES ('5', '1', '2', '333', '2017-09-11 14:09:55');
INSERT INTO `comments` VALUES ('6', '1', '3', '写的是个啥啊，哎，无语了真是的\n', '2017-09-11 14:20:24');
INSERT INTO `comments` VALUES ('7', '47', null, '写的挺好啊', '2017-09-12 11:48:30');
INSERT INTO `comments` VALUES ('8', '47', null, '很有用', '2017-09-12 11:49:07');
INSERT INTO `comments` VALUES ('9', '47', null, '是吗?\n', '2017-09-13 16:45:10');
INSERT INTO `comments` VALUES ('10', '48', null, '羊羊羊，咩咩咩', '2017-09-13 16:44:23');
INSERT INTO `comments` VALUES ('11', '48', null, '哈哈', '2017-09-14 10:23:21');
INSERT INTO `comments` VALUES ('12', '47', null, '李建洋太2了~', '2017-09-18 17:25:29');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `user_name` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('liyang', '812118', '1');
